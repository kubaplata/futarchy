/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
import { UpdateTotemArgs } from '../types/UpdateTotemArgs';
/**
 * @category Instructions
 * @category UpdateTotem
 * @category generated
 */
export type UpdateTotemInstructionArgs = {
    args: UpdateTotemArgs;
};
/**
 * @category Instructions
 * @category UpdateTotem
 * @category generated
 */
export declare const updateTotemStruct: beet.FixableBeetArgsStruct<UpdateTotemInstructionArgs & {
    instructionDiscriminator: number[];
}>;
/**
 * Accounts required by the _updateTotem_ instruction
 *
 * @property [**signer**] signer
 * @property [] totem
 * @property [_writable_] totemDao
 * @property [] treasury
 * @property [_writable_] proposal
 * @property [_writable_] proposer
 * @property [] question
 * @property [] baseVault
 * @property [] passAmm
 * @property [] failAmm
 * @property [] passLpMint
 * @property [] passLpUserAccount
 * @property [] failLpMint
 * @property [] failLpUserAccount
 * @property [] passLpVaultAccount
 * @property [] failLpVaultAccount
 * @property [] quoteVault
 * @property [] autocratProgram
 * @property [] associatedTokenProgram
 * @category Instructions
 * @category UpdateTotem
 * @category generated
 */
export type UpdateTotemInstructionAccounts = {
    signer: web3.PublicKey;
    totem: web3.PublicKey;
    totemDao: web3.PublicKey;
    treasury: web3.PublicKey;
    proposal: web3.PublicKey;
    proposer: web3.PublicKey;
    question: web3.PublicKey;
    baseVault: web3.PublicKey;
    passAmm: web3.PublicKey;
    failAmm: web3.PublicKey;
    passLpMint: web3.PublicKey;
    passLpUserAccount: web3.PublicKey;
    failLpMint: web3.PublicKey;
    failLpUserAccount: web3.PublicKey;
    passLpVaultAccount: web3.PublicKey;
    failLpVaultAccount: web3.PublicKey;
    quoteVault: web3.PublicKey;
    autocratProgram: web3.PublicKey;
    tokenProgram?: web3.PublicKey;
    associatedTokenProgram: web3.PublicKey;
    systemProgram?: web3.PublicKey;
    anchorRemainingAccounts?: web3.AccountMeta[];
};
export declare const updateTotemInstructionDiscriminator: number[];
/**
 * Creates a _UpdateTotem_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category UpdateTotem
 * @category generated
 */
export declare function createUpdateTotemInstruction(accounts: UpdateTotemInstructionAccounts, args: UpdateTotemInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
