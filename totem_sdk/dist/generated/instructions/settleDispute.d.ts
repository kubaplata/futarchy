/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
import { SettleDisputeArgs } from '../types/SettleDisputeArgs';
/**
 * @category Instructions
 * @category SettleDispute
 * @category generated
 */
export type SettleDisputeInstructionArgs = {
    args: SettleDisputeArgs;
};
/**
 * @category Instructions
 * @category SettleDispute
 * @category generated
 */
export declare const settleDisputeStruct: beet.BeetArgsStruct<SettleDisputeInstructionArgs & {
    instructionDiscriminator: number[];
}>;
/**
 * Accounts required by the _settleDispute_ instruction
 *
 * @property [_writable_, **signer**] signer
 * @property [_writable_] totem
 * @property [_writable_] dispute
 * @property [] proposal (optional)
 * @property [_writable_] statement
 * @property [] totemDao
 * @category Instructions
 * @category SettleDispute
 * @category generated
 */
export type SettleDisputeInstructionAccounts = {
    signer: web3.PublicKey;
    totem: web3.PublicKey;
    dispute: web3.PublicKey;
    proposal?: web3.PublicKey;
    statement: web3.PublicKey;
    totemDao: web3.PublicKey;
    anchorRemainingAccounts?: web3.AccountMeta[];
};
export declare const settleDisputeInstructionDiscriminator: number[];
/**
 * Creates a _SettleDispute_ instruction.
 *
 * Optional accounts that are not provided default to the program ID since
 * this was indicated in the IDL from which this instruction was generated.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category SettleDispute
 * @category generated
 */
export declare function createSettleDisputeInstruction(accounts: SettleDisputeInstructionAccounts, args: SettleDisputeInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
